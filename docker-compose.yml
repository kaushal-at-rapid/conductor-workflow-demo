version: '3.7'

services:
  # ----------------------------------------
  # 1. PostgreSQL Database
  # ----------------------------------------
  postgres:
    image: postgres:15-alpine
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "user"
      POSTGRES_PASSWORD: "password"
      POSTGRES_DB: "conductor"
    volumes:
      # Optional: To persist data on your host
      - ./pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user -d conductor" ]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # ----------------------------------------
  # 2. Conductor Server (Orchestrator)
  # ----------------------------------------
  conductor:
    image: orkesio/orkes-conductor-community-standalone:1.1.12
    container_name: conductor-server
    ports:
      - "8080:8080"
      - "5000:5000"
    restart: unless-stopped

  api:
    build:
      context: ./go-api-service
    image: go-api-service:local
    container_name: go-api-service
    ports:
      - "8081:8081"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=user
      - DB_PASSWORD=password
      - DB_NAME=conductor
      - CONDUCTOR_API_URL=http://conductor:8080/api
#    depends_on:
#      postgres:
#        condition: service_healthy
#      conductor:
#        condition: service_healthy
    restart: unless-stopped
    command: ["/go-api-service"]

  worker:
    build:
      context: ./go-worker-service
    image: go-worker-service:local
    container_name: go-worker-service
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=user
      - DB_PASSWORD=password
      - DB_NAME=conductor
      - CONDUCTOR_API_URL=http://conductor:8080/api
#    depends_on:
#      postgres:
#        condition: service_healthy
#      conductor:
#        condition: service_healthy
    restart: unless-stopped
    command: ["/go-worker-service"]